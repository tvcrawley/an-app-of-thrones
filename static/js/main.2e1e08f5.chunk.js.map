{"version":3,"sources":["layout/Header.js","regions/Regions.js","regions/Region.js","layout/Main.js","layout/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Regions","regions","Object","keys","this","props","map","region","regionName","match","key","Link","to","concat","Region","console","log","houses","house","name","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","housesOfDorne","housesOfThe North","housesOfThe Vale","housesOfThe Reach","housesOfThe Westerlands","housesOfThe Riverlands","housesOfThe Crownlands","housesOfThe Stormlands","housesOfThe Neck","housesOfIron Islands","_this2","forEach","fetch","then","res","ok","Error","json","setState","defineProperty","catch","error","_this3","Route","exact","path","render","regions_Regions","_ref","regionHouses","filter","params","regions_Region","withRouter","Footer","App","src_layout_Header","src_layout_Main","src_layout_Footer","appJsx","HashRouter","src_App_0","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e1e08f5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        Header\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import './Regions.css'\n\n// component: container for regions so view can switch from\n// `Regions` component to `Region` component\nclass Regions extends Component {\n  render() {\n    const stateRegex = '/(?<=housesOf).*/'\n\n    const regions = Object.keys(this.props.regions).map(region => {\n      const regionName = region.match(stateRegex)[0]\n\n      return <li key={regionName}>\n               <Link to={`/regions/${regionName}`}> {regionName}</Link>\n             </li>\n    })\n    return (\n      <div className=\"Regions\">\n        {regions}\n      </div>\n    )\n  }\n}\n\nexport default Regions\n","import React, { Component } from 'react'\n// import './Region.css'\n\n// component: container for region to display specific info pertaining to it\nclass Region extends Component {\n  render() {\n    console.log(this.props)\n    const houses = this.props.houses.map((house) => {\n      console.log(house)\n      return <li key={house.name}>{house.name}</li>\n    })\n\n    return (\n      <div className=\"Region\">\n      Welcome to {this.props.region}\n      {houses}\n      </div>\n    )\n  }\n}\n\nexport default Region\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport './Main.css'\nimport Regions from '../regions/Regions'\nimport Region from '../regions/Region'\n\nclass Main extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n        \"housesOfDorne\": null,\n        \"housesOfThe North\": null,\n        \"housesOfThe Vale\": null,\n        \"housesOfThe Reach\": null,\n        \"housesOfThe Westerlands\": null,\n        \"housesOfThe Riverlands\": null,\n        \"housesOfThe Crownlands\": null,\n        \"housesOfThe Stormlands\": null,\n        \"housesOfThe Neck\": null,\n        \"housesOfIron Islands\": null\n        }\n      }\n\n  // GET data for each region based on the state key name\n  componentDidMount () {\n    // regex: look for content after `housesOf`\n    const stateRegex = '/(?<=housesOf).*/'\n\n    // loop through the keys of state\n    Object.keys(this.state).forEach(key => {\n      // retrieves the result of matching a string against a regex\n      const regionName = key.match(stateRegex)[0]\n      // GET region data and save to state\n      fetch(`https://anapioficeandfire.com/api/houses?region=${regionName}`)\n        .then(res => res.ok ? res : new Error())\n        .then(res => res.json())\n        .then(res => this.setState({ [`housesOf${regionName}`]: res }))\n        .catch(console.error)\n    })\n  }\n  render() {\n    return (\n      <div className=\"Main\">\n        Main\n\n        <Route exact path='/' render={\n          () => <Regions regions={this.state} />\n        } />\n        <Route exact path='/regions/:regionName' render={\n          ({match}) => {\n            const stateRegex = '/(?<=housesOf).*/'\n\n            // render the data for the correct region based on a comparison\n            // between the regionName from params and state\n            const regionHouses = Object.keys(this.state).filter(key => {\n              const regionName = key.match(stateRegex)[0]\n              return (match.params.regionName === regionName) && (this.state[key])\n            })\n            return  <Region\n                      region={match.params.regionName}\n                      houses={this.state[regionHouses]}\n                    />\n          }\n        } />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Main)\n","import React, { Component } from 'react'\nimport './Footer.css'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"Footer\">\n        Footer\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './layout/Header'\nimport Main from './layout/Main'\nimport Footer from './layout/Footer'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}