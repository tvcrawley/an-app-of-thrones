{"version":3,"sources":["layout/Header.js","regions/Regions.js","houses/House.js","regions/Region.js","layout/Main.js","layout/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Regions","regions","Object","keys","this","props","map","regionName","key","Link","to","concat","House","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","swornMembers","currentLord","member","_this2","fetch","then","res","ok","Error","json","toConsumableArray","push","setState","catch","console","error","_this3","house","name","_this4","forEach","getSwornMembers","getCurrentLord","prevProps","_this5","undefined","match","params","houseName","_this$props$house","words","coatOfArms","ancestralWeapons","_this$state","ancestralWeaponsJSX","weapon","swornMembersJSX","memberNumber","url","replace","withRouter","Region","overlord","houses","region","Route","path","render","_ref","regionHouse","filter","houses_House","Main","Dorne","The North","The Vale","The Reach","The Westerlands","The Riverlands","The Crownlands","The Stormlands","The Neck","Iron Islands","defineProperty","exact","regions_Regions","regionHouses","regions_Region","Footer","App","src_layout_Header","src_layout_Main","src_layout_Footer","appJsx","HashRouter","src_App_0","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60953297.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        Header\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import './Regions.css'\n\n// component: container for regions so view can switch from\n// `Regions` component to `Region` component\nclass Regions extends Component {\n  render() {\n\n    const regions = Object.keys(this.props.regions).map(regionName => {\n      return <li key={regionName}>\n               <Link to={`/regions/${regionName}`}> {regionName}</Link>\n             </li>\n    })\n    return (\n      <div className=\"Regions\">\n        {regions}\n      </div>\n    )\n  }\n}\n\nexport default Regions\n","import React, { Component } from 'react'\n// import './House.css'\nimport { withRouter } from 'react-router'\n\n// component: container for region to display specific info pertaining to it\nclass House extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      swornMembers: [],\n      currentLord: null\n    }\n  }\n\n  getSwornMembers (member) {\n    fetch(member)\n    .then(res => res.ok ? res : new Error())\n    .then(res => res.json())\n    .then(res => {\n      const swornMembers = [...this.state.swornMembers]\n      swornMembers.push(res)\n      return this.setState({swornMembers})\n    })\n    .catch(console.error)\n  }\n\n  getCurrentLord () {\n    if (this.props.house.currentLord) {\n      fetch(this.props.house.currentLord)\n        .then(res => res.ok ? res : new Error())\n        .then(res => res.json())\n        .then(res => this.setState({ currentLord: res.name }))\n        .catch(console.error)\n    }\n  }\n\n  // GET swornMembers and currentLord data and save to state\n  componentDidMount() {\n    this.props.house.swornMembers.forEach(member => this.getSwornMembers(member))\n    this.getCurrentLord()\n   }\n\n   // render component and check if the previous prop has changed\n   componentDidUpdate(prevProps) {\n     if(prevProps === undefined) {\n       return false\n     }\n\n     // reload swornMembers and currentLord data if there is a different\n     // houseName in params\n     if (prevProps.match.params.houseName !== this.props.match.params.houseName) {\n       this.setState({swornMembers: []})\n       this.setState({currentLord: null})\n\n       this.props.house.swornMembers.forEach(member => this.getSwornMembers(member))\n       this.getCurrentLord()\n      }\n   }\n\n  render() {\n    const { name, words, coatOfArms, ancestralWeapons } = this.props.house\n    const { swornMembers, currentLord } = this.state\n\n    const ancestralWeaponsJSX = ancestralWeapons.map(weapon => (\n      <li key={weapon}>{weapon}</li>\n    ))\n\n    const swornMembersJSX = swornMembers.map(member => {\n      // find numbers at the end of the member's url\n      // ex: https://anapioficeandfire.com/api/characters/497\n      const memberNumber = member.url.replace(/\\D/g, '')\n      return <li key={memberNumber}>{member.name}</li>\n    })\n\n    return (\n      <div className=\"House\">\n        <h3>{name}</h3>\n\n        {words ? <p>Words: {words}</p> : null}\n        {coatOfArms ? <p>Coat of Arms: {coatOfArms}</p> : null}\n        {ancestralWeapons[0] ? <ul>Ancestral Weapons: {ancestralWeaponsJSX}</ul> : null}\n        {currentLord ? <p>Current Lord: {currentLord}</p> : <p>No current lord</p>}\n        {swornMembers[0] ? <p>Sworn Members: {swornMembersJSX}</p> : null}\n        \n      </div>\n    )\n  }\n}\n\nexport default withRouter(House)\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { withRouter } from 'react-router'\n// import './Region.css'\nimport House from '../houses/House'\n\n// component: container for region to display specific info pertaining to it\nclass Region extends Component {\n  constructor () {\n    super ()\n\n    this.state = {\n      overlord: null\n    }\n  }\n\n  // GET overlord data and save to state\n  componentDidMount () {\n    if (this.props.houses[0].overlord) {\n      fetch(this.props.houses[0].overlord)\n        .then(res => res.ok ? res : new Error())\n        .then(res => res.json())\n        .then(res => this.setState({ overlord: res.name }))\n        .catch(console.error)\n    }\n  }\n\n  render() {\n    const houses = this.props.houses.map((house) => {\n      return <li key={house.name}>\n               <Link to={`${this.props.match.url}/${house.name}`}> {house.name}</Link>\n             </li>\n    })\n\n    return (\n      <div className=\"Region\">\n        Welcome to {this.props.region}\n        {this.state.overlord ?\n          <p>Reigning Overlord: {this.state.overlord}</p> : null}\n        {houses}\n        <Route path={`${this.props.match.url}/:houseName`} render={\n          ({match}) => {\n            const regionHouse = this.props.houses.filter(house => {\n              return (match.params.houseName === house.name)\n            })\n            return  <House house={regionHouse[0]} />\n          }\n        } />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Region)\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport './Main.css'\nimport Regions from '../regions/Regions'\nimport Region from '../regions/Region'\n\nclass Main extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n        \"Dorne\": null,\n        \"The North\": null,\n        \"The Vale\": null,\n        \"The Reach\": null,\n        \"The Westerlands\": null,\n        \"The Riverlands\": null,\n        \"The Crownlands\": null,\n        \"The Stormlands\": null,\n        \"The Neck\": null,\n        \"Iron Islands\": null\n        }\n      }\n\n  // GET data for each region based on the state key name\n  componentDidMount () {\n\n    // loop through the keys of state\n    Object.keys(this.state).forEach(regionName => {\n\n      // GET region data and save to state\n      fetch(`https://anapioficeandfire.com/api/houses?region=${regionName}`)\n        .then(res => res.ok ? res : new Error())\n        .then(res => res.json())\n        .then(res => this.setState({ [regionName]: res }))\n        .catch(console.error)\n    })\n  }\n  render() {\n    return (\n      <div className=\"Main\">\n        Main\n\n        <Route exact path='/' render={\n          () => <Regions regions={this.state} />\n        } />\n        <Route path='/regions/:regionName' render={\n          ({match}) => {\n\n            // render the data for the correct region based on a comparison\n            // between the regionName from params and state\n            const regionHouses = Object.keys(this.state).filter(regionName => {\n              return (match.params.regionName === regionName) && (this.state[regionName])\n            })\n            return  <Region\n                      region={match.params.regionName}\n                      houses={this.state[regionHouses]}\n                    />\n          }\n        } />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Main)\n","import React, { Component } from 'react'\nimport './Footer.css'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"Footer\">\n        Footer\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './layout/Header'\nimport Main from './layout/Main'\nimport Footer from './layout/Footer'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}